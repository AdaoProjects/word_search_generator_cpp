#include <cstdlib>
#include <ctime>
#include <iostream>
#include <string>
const int  num_rows=8;
char word_search[num_rows*num_rows];
std:: string list_words_addded[15];
bool filled_spaces[num_rows*num_rows];
void create_new_word_search();
void add_new_word();
int main()
{
     for(int w=0;w<1;w++){
         create_new_word_search();
         for(int j=0;j<15;j++){
         add_new_word();
         }
    //print puzzle
    printf("\"");
    for (int i=0;i<num_rows;i++){
        for(int j=0; j<num_rows;j++){
            printf("%c",word_search[num_rows*i+j]);
        }
        printf("\n");
    }
    printf("\",\n");
    }
return 0;
}
void create_new_word_search(){
char letters[27]="ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    for (int p=0;p<num_rows;p++){
        for (int l=0;l<num_rows;l++){
            filled_spaces[num_rows*p+l]=false;
        }
    }
    for (int p=0;p<num_rows;p++){
        for(int h=0;h<num_rows;h++){
            int x = rand()%26;
            word_search[num_rows*p+h]=letters[x];
        }
    }
}
void add_new_word(){
 static const std::string list_all_words[1000]={"feed",
    "title",
    "faith",
    "river",
    "count",
    "marry",
    "path",
    "shop",
    "folk",
    "lift",
    "jump",
    "limit",
    "worth",
    "warm",
    "soft",
    "gift",
    "speed",
    "cross",
    "youth",
    "wave",
    "broad",
    "deny",
    "twice",
    "suit",
    "blow",
    "cook",
    "burn",
    "shoe",
    "grade",
    "quiet",
    "dress",
    "aware",
    "bone",
    "chief",
    "wine",
    "below",
    "cool",
    "voter",
    "hell",
    "moral",
    "tour",
    "photo",
    "grab",
    "daily",
    "fair",
    "pair",
    "knee",
    "tape",
    "hire",
    "fully",
    "actor",
    "birth",
    "clean",
    "train",
    "lady",
    "neck",
    "lean",
    "tall",
    "plate",
    "hate",
    "male",
    "alive",
    "army",
    "abuse",
    "shut",
    "extra",
    "lots",
    "rain",
    "paint",
    "fuel",
    "leaf",
    "pool",
    "climb",
    "sweet",
    "salt",
    "metal",
    "urban",
    "lunch",
    "sugar",
    "enemy",
    "soul",
    "panel",
    "bear",
    "thin",
    "poll",
    "sight",
    "adopt",
    "works",
    "okay",
    "empty",
    "trail",
    "novel",
    "code",
    "jury",
    "Iraqi",
    "theme",
    "storm",
    "union",
    "desk",
    "fruit",
    "prime",
    "dance",
    "being",
    "ring",
    "shift",
    "mark",
    "trend",
    "loan",
    "angry",
    "crew",
    "meal",
    "truly",
    "earth",
    "chest",
    "thick",
    "cash",
    "link",
    "root",
    "nose",
    "file",
    "sick",
    "duty",
    "sheet",
    "ought",
    "slow",
    "zone",
    "wake",
    "brown",
    "shirt",
    "pilot",
    "warn",
    "guide",
    "snow",
    "steal",
    "slip",
    "meat",
    "funny",
    "soil",
    "blame",
    "golf",
    "crazy",
    "chain",
    "user",
    "kick",
    "solve",
    "used",
    "bowl",
    "equal",
    "forth",
    "frame",
    "host",
    "hall",
    "trust",
    "ocean",
    "tooth",
    "smart",
    "rely",
    "topic",
    "debt",
    "rare",
    "tank",
    "nurse",
    "aside",
    "bond",
    "wing",
    "pour",
    "stir",
    "beer",
    "tear",
    "doubt",
    "grant",
    "hero",
    "cloud",
    "seed",
    "busy",
    "copy",
    "cheap",
    "cite",
    "gray",
    "dish",
    "beach",
    "route",
    "core",
    "upper",
    "rush",
    "tired",
    "vast",
    "fewer",
    "apart",
    "match",
    "proud",
    "flow",
    "waste",
    "mass",
    "bomb",
    "tone",
    "wheel",
    "cable",
    "rural",
    "AIDS",
    "cream",
    "gate",
    "solid",
    "hill",
    "noise",
    "grass",
    "taste",
    "milk",
    "cast",
    "sharp",
    "lower",
    "plus",
    "weak",
    "honor",
    "knock",
    "wrap",
    "asset",
    "bread",
    "lucky",
    "drag",
    "roof",
    "diet",
    "wash",
    "brief",
    "post",
    "steel",
    "shout",
    "chip",
    "self",
    "bike",
    "layer",
    "slide",
    "lake",
    "bend",
    "shall",
    "error",
    "Arab",
    "sand",
    "print",
    "album",
    "joint",
    "reply",
    "cycle",
    "lock",
    "pose",
    "sale",
    "grand",
    "mine",
    "hello",
    "tale",
    "knife",
    "phase",
    "joke",
    "coat",
    "quote",
    "urge",
    "dust",
    "elect",
    "glad",
    "pack",
    "iron",
    "gene",
    "sauce",
    "shock",
    "kiss",
    "habit",
    "juice",
    "boss",
    "entry",
    "king",
    "maker",
    "mood",
    "boot",
    "Asian",
    "bean",
    "usual",
    "anger",
    "peak",
    "vary",
    "wire",
    "round",
    "holy",
    "twin",
    "luck",
    "smell",
    "toss",
    "bury",
    "pray",
    "ally",
    "tower",
    "smoke",
    "pure",
    "peer",
    "belt",
    "coast",
    "flag",
    "corn",
    "moon",
    "inner",
    "swing",
    "crop",
    "mayor",
    "pink",
    "buck",
    "poem",
    "bind",
    "fifth",
    "favor",
    "weigh",
    "mail",
    "false",
    "tube",
    "quit",
    "Latin",
    "jail",
    "pace",
    "essay",
    "giant",
    "cake",
    "depth",
    "shell",
    "onion",
    "flat",
    "brand",
    "award",
    "arise",
    "armed",
    "wage",
    "stake",
    "fiber",
    "snap",
    "gear",
    "minor",
    "gang",
    "label",
    "teen",
    "index",
    "draft",
    "rough",
    "yell",
    "drama",
    "clock",
    "sweep",
    "spin",
    "bell",
    "rank",
    "super",
    "yield",
    "fence",
    "bunch",
    "found",
    "react",
    "cheek",
    "lost",
    "pant",
    "apple",
    "virus",
    "wipe",
    "blind",
    "port",
    "slave",
    "elite",
    "dirt",
    "rice",
    "tight",
    "Bible",
    "chart",
    "solar",
    "strip",
    "salad",
    "pause",
    "bench",
    "lover",
    "deck",
    "newly",
    "pole",
    "mode",
    "imply",
    "pride",
    "bake",
    "sink",
    "ideal",
    "crash",
    "craft",
    "swim",
    "tire",
    "fault",
    "loose",
    "prior",
    "relax",
    "stair",
    "proof",
    "dirty",
    "fade",
    "alter",
    "mask",
    "load",
    "deer",
    "split",
    "vital",
    "fate",
    "oven",
    "poet",
    "mere",
    "adapt",
    "Irish",
    "honey",
    "pale",
    "flee",
    "tribe",
    "shelf",
    "lawn",
    "buyer",
    "plot",
    "pipe",
    "math",
    "shade",
    "tail",
    "mount",
    "angle",
    "palm",
    "soup",
    "pile",
    "crack",
    "given",
    "trace",
    "meter",
    "rapid",
    "aide",
    "fifty",
    "porch",
    "mall",
    "heel",
    "rifle",
    "trick",
    "tent",
    "myth",
    "nerve",
    "ratio",
    "menu",
    "humor",
    "loud",
    "glove",
    "delay",
    "scope",
    "badly",
    "eager",
    "auto",
    "motor",
    "float",
    "blade",
    "cabin",
    "bite",
    "yours",
    "pitch",
    "pine",
    "chef",
    "boom",
    "shit",
    "lemon",
    "naked",
    "shrug",
    "cope",
    "flame",
    "wound",
    "flesh",
    "grain",
    "brush",
    "ease",
    "seize",
    "wise",
    "acid",
    "odds",
    "shore",
    "lung",
    "ugly",
    "ghost",
    "awful",
    "piano",
    "mouse",
    "rope",
    "chase",
    "brick",
    "patch",
    "sake",
    "gaze",
    "swear",
    "clue",
    "slice",
    "dear",
    "coal",
    "exact",
    "uncle",
    "sigh",
    "dare",
    "grave",
    "rose",
    "rail",
    "couch",
    "mess",
    "shine",
    "norm",
    "upset",
    "organ",
    "magic",
    "stem",
    "rape",
    "jeans",
    "hunt",
    "echo",
    "pill",
    "flour",
    "bare",
    "slope",
    "rent",
    "pump",
    "candy",
    "evil",
    "medal",
    "slam",
    "melt",
    "curve",
    "logic",
    "harsh",
    "greet",
    "march",
    "snake",
    "fold",
    "flash",
    "beef",
    "Islam",
    "Roman",
    "elbow",
    "duck",
    "dose",
    "plead",
    "sixth",
    "trunk",
    "rumor",
    "trap",
    "cloth",
    "lens",
    "lend",
    "plain",
    "fraud",
    "nail",
    "array",
    "burst",
    "cave",
    "herb",
    "flood",
    "arena",
    "drift",
    "drain",
    "hurry",
    "suck",
    "leap",
    "wrist",
    "pond",
    "guilt",
    "skirt",
    "dump",
    "hence",
    "limb",
    "tune",
    "harm",
    "horn",
    "await",
    "spill",
    "grace",
    "towel",
    "prize",
    "boost",
    "alarm",
    "grip",
    "weird",
    "sweat",
    "outer",
    "drunk",
    "chaos",
    "forty",
    "lobby",
    "trait",
    "beam",
    "thumb",
    "unity",
    "twist",
    "fork",
    "disk",
    "shame",
    "rebel",
    "fluid",
    "hook",
    "click",
    "exit",
    "carve",
    "belly",
    "scare",
    "ankle",
    "mild",
    "rider",
    "doll",
    "noon",
    "amid",
    "crawl",
    "donor",
    "hers",
    "jazz",
    "opera",
    "oral",
    "clerk",
    "fist",
    "bath",
    "laser",
    "bold",
    "hint",
    "realm",
    "blend",
    "peel",
    "pizza",
    "flip",
    "bias",
    "lamp",
    "chin",
    "chop",
    "civic",
    "silk",
    "steep",
    "alien",
    "scary",
    "angel",
    "rage",
    "dawn",
    "silly",
    "tide",
    "seal",
    "scan",
    "fool",
    "rear",
    "ranch",
    "cart",
    "elder",
    "Dutch",
    "mate",
    "Greek",
    "quest",
    "juror",
    "stiff",
    "slap",
    "toxic",
    "grief",
    "ours",
    "buddy",
    "barn",
    "sword",
    "glory",
    "tuck",
    "drum",
    "faint",
    "queen",
    "input",
    "sail",
    "nest",
    "lane",
    "steam",
    "unite",
    "cage",
    "equip",
    "rack",
    "wolf",
    "grin",
    "bless",
    "aunt",
    "bonus",
    "mixed",
    "orbit",
    "grasp",
    "spite",
    "calm",
    "haul",
    "wagon",
    "ruin",
    "sheer",
    "bush",
    "clip",
    "thigh",
    "bull",
    "sheep",
    "exam",
    "whale",
    "skull",
    "loop",
    "edit",
    "whip",
    "boil",
    "pork",
    "sock",
    "sexy",
    "spell",
    "booth",
    "waist",
    "lion",
    "royal",
    "panic",
    "crush",
    "cliff",
    "cord",
    "tumor",
    "pulse",
    "fixed",
    "diary",
    "irony",
    "spoon",
    "midst",
    "alley",
    "soap",
    "cute",
    "rival",
    "punch",
    "known",
    "purse",
    "shed",
    "icon",
    "cheat",
    "heal",
    "fever",
    "coin",
    "dried",
    "shove",
    "stove",
    "alike",
    "dough",
    "trash",
    "gross",
    "damn",
    "spray",
    "beast",
    "shark",
    "mill",
    "fleet",
    "debut",
    "hike",
    "scent",
    "stack",
    "sack",
    "cease",
    "tray",
    "nasty",
    "wheat",
    "aisle",
    "vocal",
    "risky",
    "pasta",
    "genre",
    "merit",
    "chunk",
    "coup",
    "skip",
    "robot",
    "boast",
    "sole",
    "weed",
    "added",
    "deem",
    "sneak",
    "blank",
    "cure",
    "have",
    "that",
    "with",
    "this",
    "they",
    "from",
    "what",
    "their",
    "would",
    "make",
    "about",
    "know",
    "will",
    "time",
    "there",
    "year",
    "think",
    "when",
    "which",
    "them",
    "some",
    "take",
    "into",
    "just",
    "your",
    "come",
    "could",
    "than",
    "like",
    "other",
    "then",
    "more",
    "these",
    "want",
    "look",
    "first",
    "also",
    "find",
    "here",
    "thing",
    "give",
    "many",
    "well",
    "only",
    "those",
    "tell",
    "very",
    "even",
    "back",
    "good",
    "woman",
    "life",
    "child",
    "work",
    "down",
    "after",
    "call",
    "world",
    "over",
    "still",
    "last",
    "need",
    "feel",
    "three",
    "state",
    "never",
    "high",
    "most",
    "much",
    "leave",
    "while",
    "mean",
    "keep",
    "great",
    "same",
    "group",
    "begin",
    "seem",
    "help",
    "talk",
    "where",
    "turn",
    "every",
    "start",
    "hand",
    "might",
    "show",
    "part",
    "place",
    "such",
    "again",
    "case",
    "week",
    "each",
    "right",
    "hear",
    "play",
    "small",
    "move",
    "night",
    "live",
    "point",
    "hold",
    "today",
    "bring",
    "next",
    "large",
    "must",
    "home",
    "under",
    "water",
    "room",
    "write",
    "area",
    "money",
    "story",
    "young",
    "fact",
    "month",
    "study",
    "book",
    "word",
    "issue",
    "side",
    "kind",
    "four",
    "head",
    "black",
    "long",
    "both",
    "house",
    "since",
    "away",
    "until",
    "power",
    "hour",
    "game",
    "often",
    "line",
    "among",
    "ever",
    "stand",
    "lose",
    "meet",
    "city",
    "later",
    "name",
    "five",
    "once",
    "white",
    "least",
    "learn",
    "real",
    "team",
    "best",
    "idea",
    "body",
    "lead",
    "watch",
    "stop",
    "face",
    "speak",
    "read",
    "level",
    "allow",
    "spend",
    "door",
    "sure",
    "party",
    "grow",
    "open",
    "walk",
    "girl",
    "early",
    "food",
    "force",
    "offer",
    "foot",
    "maybe",
    "able",
    "love",
    "music",
    "human",
    "wait",
    "serve",
    "send",
    "sense",
    "build",
    "stay",
    "fall",
    "plan",
    "death",
    "reach",
    "local",
    "kill",
    "yeah",
    "class",
    "raise",
    "care",
    "late",
    "hard",
    "field",
    "else",
    "pass",
    "sell",
    "major",
    "along",
    "role",
    "rate",
    "heart",
    "drug",
    "light",
    "voice",
    "wife",
    "whole",
    "mind",
    "pull",
    "free",
    "price",
    "less",
    "hope",
    "view",
    "carry",
    "town",
    "road",
    "drive",
    "true",
    "break",
    "thank",
    "value",
    "full",
    "model",
    "join"};
    int x=rand()%1000;
    std::string new_word_to_add=list_all_words[x];
    std::string type_of_position;
    int row_start;
    int column_start;
    int row_end;
    int column_end;

    x=rand()%4;
    if(x==0){
        type_of_position="horizontal";
        row_start=rand()%num_rows;
        column_start=rand()%(num_rows-new_word_to_add.length()+1);
        row_end=row_start;
        column_end=column_start+new_word_to_add.length()-1;
    }else if(x==1){
        type_of_position="vertical";
        row_start=rand()%(num_rows-new_word_to_add.length()+1);
        column_start=rand()%num_rows;
        row_end=row_start+new_word_to_add.length()-1;
        column_end=column_start;
    }else if(x==2){
        type_of_position="diagonal_SE";
        row_start=rand()%(num_rows-new_word_to_add.length()+1);
        column_start=rand()%(num_rows-new_word_to_add.length()+1);
        row_end=row_start+new_word_to_add.length()-1;
        column_end=column_start+new_word_to_add.length()-1;
    }else{
        type_of_position="diagonal_SO";
        row_start=rand()%(num_rows-new_word_to_add.length()+1);;
        column_start=num_rows-rand()%(num_rows-new_word_to_add.length()+1);
        row_end=row_start+new_word_to_add.length()-1;
        column_end=column_start-new_word_to_add.length()+1;
    }
    bool is_reversed=false;
    x=rand()%2;
    if(x==1){
        is_reversed=true;
    }
    bool shocks=false;
    int limit_row=0;
    int limit_column=0;
    if(type_of_position=="horizontal"){
    for(int k=0; k<num_rows;k++){
        for(int l=0;l<num_rows;l++){
            row_start=row_start+k-limit_row;
            column_start=column_start+l-limit_column;
            if(row_start==num_rows){
                row_start=0;
                limit_row=k;
            }
            if(column_start==num_rows){
                column_start=0;
                limit_column=l;
            }
            row_end=row_start;
            column_end=column_start+new_word_to_add.length()-1;
            for (int i =0; i<new_word_to_add.length();i++){
        if(filled_spaces[row_start*num_rows+column_start+i]==1){
            if(is_reversed){
                if(new_word_to_add[new_word_to_add.length()-1-i]!=word_search[row_start*num_rows+column_start+i]){
                    shocks=true;
                }
            }else{
                if(new_word_to_add[i]!=word_search[row_start*num_rows+column_start+i]){
                    shocks=true;
                }
            }
        }
    }
    if(shocks==false){
        break;
    }
    }
    if(shocks==false){
        break;
    }
    }
    }else if(type_of_position=="vertical"){
for(int k=0; k<num_rows;k++){
        for(int l=0;l<num_rows;l++){
            row_start=row_start+k-limit_row;
            column_start=column_start+l-limit_column;
            if(row_start==num_rows){
                row_start=0;
                limit_row=k;
            }
            if(column_start==num_rows){
                column_start=0;
                limit_column=l;
            }
            row_end=row_start+new_word_to_add.length()-1;
            column_end=column_start;
            for (int i =0; i<new_word_to_add.length();i++){
        if(filled_spaces[(row_start+i)*num_rows+column_start]==1){
            if(is_reversed){
                if(new_word_to_add[new_word_to_add.length()-1-i]!=word_search[(row_start+i)*num_rows+column_start]){
                    shocks=true;
                }
            }else{
                if(new_word_to_add[i]!=word_search[(row_start+i)*num_rows+column_start]){
                    shocks=true;
                }
            }
        }
    }
    if(shocks==false){
        break;
    }
    }
    if(shocks==false){
        break;
    }
    }
    }else if(type_of_position=="diagonal_SE"){
for(int k=0; k<num_rows;k++){
        for(int l=0;l<num_rows;l++){
            row_start=row_start+k-limit_row;
            column_start=column_start+l-limit_column;
            if(row_start==num_rows){
                row_start=0;
                limit_row=k;
            }
            if(column_start==num_rows){
                column_start=0;
                limit_column=l;
            }
            row_end=row_start+new_word_to_add.length()-1;
            column_end=column_start+new_word_to_add.length()-1;
            for (int i =0; i<new_word_to_add.length();i++){
        if(filled_spaces[(row_start+i)*num_rows+column_start+i]==1){
            if(is_reversed){
                if(new_word_to_add[new_word_to_add.length()-1-i]!=word_search[(row_start+i)*num_rows+column_start+i]){
                    shocks=true;
                }
            }else{
                if(new_word_to_add[i]!=word_search[(row_start+i)*num_rows+column_start+i]){
                    shocks=true;
                }
            }
        }
    }
    if(shocks==false){
        break;
    }
    }
    if(shocks==false){
        break;
    }
    }
    }else if(type_of_position=="diagonal_SO"){
        for(int k=0; k<num_rows;k++){
        for(int l=0;l<num_rows;l++){
            row_start=row_start+k-limit_row;
            column_start=column_start+l-limit_column;
            if(row_start==num_rows){
                row_start=0;
                limit_row=k;
            }
            if(column_start==num_rows){
                column_start=0;
                limit_column=l;
            }
            row_end=row_start+new_word_to_add.length()-1;
        column_end=column_start-new_word_to_add.length()+1;
            for (int i =0; i<new_word_to_add.length();i++){
        if(filled_spaces[(row_start+i)*num_rows+column_start-i]==1){
            if(is_reversed){
                if(new_word_to_add[new_word_to_add.length()-1-i]!=word_search[(row_start+i)*num_rows+column_start-i]){
                    shocks=true;
                }
            }else{
                if(new_word_to_add[i]!=word_search[(row_start+i)*num_rows+column_start-i]){
                    shocks=true;
                }
            }
        }
    }
    if(shocks==false){
        break;
    }
    }
    if(shocks==false){
        break;
    }
    }
    }



    if(shocks){
        add_new_word();
    }else{
    if(type_of_position=="horizontal"){
    if(is_reversed){
        for(int i=0; i<new_word_to_add.length();i++){
        word_search[num_rows*(row_start)+column_start+i]=new_word_to_add[new_word_to_add.length()-i-1];
        filled_spaces[num_rows*(row_start)+column_start+i]=1;
    }
    }
    else{
    for(int i=0; i<new_word_to_add.length();i++){
        word_search[num_rows*(row_start)+column_start+i]=new_word_to_add[i];
        filled_spaces[num_rows*(row_start)+column_start+i]=1;
    }

    }
    }else if(type_of_position=="vertical"){
    if(is_reversed){
        for(int i=0; i<new_word_to_add.length();i++){
        word_search[num_rows*(row_start+i)+column_start]=new_word_to_add[new_word_to_add.length()-i-1];
        filled_spaces[num_rows*(row_start+i)+column_start]=1;
    }
    }
    else{
    for(int i=0; i<new_word_to_add.length();i++){
        word_search[num_rows*(row_start+i)+column_start]=new_word_to_add[i];
        filled_spaces[num_rows*(row_start+i)+column_start]=1;
    }
    }
    }else if(type_of_position=="diagonal_SE"){
    if(is_reversed){
        for(int i=0; i<new_word_to_add.length();i++){
        word_search[num_rows*(row_start+i)+column_start+i]=new_word_to_add[new_word_to_add.length()-i-1];
        filled_spaces[num_rows*(row_start+i)+column_start+i]=1;
    }
    }
    else{
    for(int i=0; i<new_word_to_add.length();i++){
        word_search[num_rows*(row_start+i)+column_start+i]=new_word_to_add[i];
        filled_spaces[num_rows*(row_start+i)+column_start+i]=1;
    }
    }
    }else if(type_of_position=="diagonal_SO"){
    if(is_reversed){
        for(int i=0; i<new_word_to_add.length();i++){
        word_search[num_rows*(row_start+i)+column_start-i]=new_word_to_add[new_word_to_add.length()-i-1];
        filled_spaces[num_rows*(row_start+i)+column_start-i]=1;
    }
    }
    else{
    for(int i=0; i<new_word_to_add.length();i++){
        word_search[num_rows*(row_start+i)+column_start-i]=new_word_to_add[i];
        filled_spaces[num_rows*(row_start+i)+column_start-i]=1;
    }
    }
    }
    }
}
